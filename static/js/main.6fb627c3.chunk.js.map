{"version":3,"sources":["components/Switch/Switch.css.js","components/Checkbox/Checkbox.css.js","components/Card/Card.css.js","components/Card/Card.js","components/ItemForm/ItemForm.css.js","components/ItemForm/components/SelectItem.js","components/ItemForm/components/Input.js","components/Switch/Switch.js","components/Checkbox/CheckMark.svg","components/Checkbox/Checkbox.js","components/Buttons/Buttons.css.js","components/Buttons/Buttons.js","components/Code/Code.css.js","components/Code/zipFiles/Switch.zip","components/Code/zipFiles/Checkbox.zip","components/Code/Code.js","components/ItemForm/ItemForm.js","App.js","index.js"],"names":["size","offColor","onColor","innerColor","rounded","onImg","offImg","borderSize","borderRadius","borderColor","hoverColor","Div","styled","div","Card","props","classes","className","id","children","SelectItem","options","option","push","value","onChange","Input","type","title","unit","min","max","on_color","on_img","Switch","CheckMark","Checkbox","Buttons","onClick","Pre","pre","Code","item","Math","codeType","href","download","round","floor","ITEMS","DATA","ItemForm","useState","setItem","setSize","setOnColor","setOffColor","setInnerColor","setBorderSize","setBorderRadius","setBorderColor","setHoverColor","setCodeType","useEffect","e","target","innerHTML","split","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fb627c3.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nlet size, offColor, onColor, innerColor, rounded, onImg, offImg;\r\n\r\nconst Div = styled.div`\r\n  ${props => {\r\n    size = props.size || 1;\r\n    offColor = props.offColor || '#cccccc';\r\n    onColor = props.on_color || '#2094f3';\r\n    innerColor = props.innerColor || '#ffffff';\r\n    rounded = props.rounded !== false;\r\n    onImg = props.on_img;\r\n    offImg = props.offImg;\r\n  }}\r\n\r\n  & label {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: ${() => (size - 1) * 10 + 30}px;\r\n    height: ${() => (size - 1) * (17 / 3) + 17}px;\r\n  }\r\n\r\n  & label input {\r\n    display: none;\r\n  }\r\n\r\n  & label span {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    transition: 0.5s;\r\n    background: ${() => offColor};\r\n    ${() => rounded && 'border-radius: 100px;'}\r\n  }\r\n\r\n  & label span:before {\r\n    position: absolute;\r\n    content: '';\r\n    transition: 0.5s;\r\n    width: ${() => (size - 1) * (13 / 3) + 13}px;\r\n    height: ${() => (size - 1) * (13 / 3) + 13}px;\r\n    left: ${() => (size - 1) * (2 / 3) + 2}px;\r\n    bottom: ${() => (size - 1) * (2 / 3) + 2}px;\r\n    background: ${() => innerColor} no-repeat center center;\r\n    background-image: url(${() => offImg});\r\n    ${() => rounded && 'border-radius: 50%;'}\r\n  }\r\n\r\n  & label input:checked + span:before {\r\n    background: ${() => innerColor} no-repeat center center;\r\n    background-image: url(${() => onImg});\r\n    transform: translateX(${() => (size - 1) * (13 / 3) + 13}px);\r\n  }\r\n\r\n  & label input:checked + span {\r\n    background: ${() => onColor};\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","import styled from 'styled-components';\r\nimport CheckMark from './CheckMark.svg';\r\n\r\nlet size, onColor, offColor, borderSize, borderRadius, borderColor, hoverColor;\r\n\r\nconst Div = styled.div`\r\n  ${props => {\r\n    size = props.size || 1;\r\n    onColor = props.on_color || '#5ce640';\r\n    offColor = props.offColor || '#ffffff';\r\n    hoverColor = props.hoverColor || '#cccccc';\r\n    borderSize = props.borderSize || '0';\r\n    borderRadius = props.borderRadius || '0';\r\n    borderColor = props.borderColor || '#000000';\r\n  }}\r\n\r\n  & label {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: ${() => (size - 1) * (13 / 3) + 13}px;\r\n    height: ${() => (size - 1) * (13 / 3) + 13}px;\r\n    border: ${() => borderSize}px solid ${() => borderColor};\r\n    border-radius: ${() => borderRadius}%;\r\n  }\r\n\r\n  & input {\r\n    display: none;\r\n  }\r\n\r\n  & span:hover {\r\n    background: ${() => hoverColor};\r\n    border-radius: ${() => borderRadius}%;\r\n  }\r\n\r\n  & span {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: ${() => offColor};\r\n    transition: 0.5s;\r\n    border-radius: ${() => borderRadius}%;\r\n  }\r\n\r\n  & label input:checked + span {\r\n    background: ${() => onColor} url(${CheckMark});\r\n    background-size: cover;\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: #a892ee;\r\n  padding: 1rem;\r\n  margin: 2rem auto;\r\n  width: 50rem;\r\n  max-width: 95%;\r\n  border-radius: 12px;\r\n  text-align: center;\r\n  box-shadow: 0 1px 8px #00000040;\r\n\r\n  & button {\r\n    font: inherit;\r\n    cursor: pointer;\r\n    padding: 1rem 2rem;\r\n    border: 1px solid #40005d;\r\n    background-color: #40005d;\r\n    color: white;\r\n    border-radius: 12px;\r\n    margin-right: 1rem;\r\n  }\r\n\r\n  & button:hover,\r\n  & button:active {\r\n    background-color: #510674;\r\n    border-color: #510674;\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","import Div from './Card.css';\r\n\r\nconst Card = props => {\r\n  const classes = props.className;\r\n  const id = props.id;\r\n  return (\r\n    <Div className={classes} id={id}>\r\n      {props.children}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  & div {\r\n    gap: 1rem;\r\n    margin-bottom: 1rem;\r\n    text-align: left;\r\n  }\r\n\r\n  & .container {\r\n    width: 100%;\r\n  }\r\n\r\n  & .container label {\r\n    margin-top: 0.2rem;\r\n    font-weight: 200;\r\n    display: block;\r\n  }\r\n\r\n  & .container input,\r\n  & .container select {\r\n    font: inherit;\r\n    padding: 0.5rem;\r\n    border-radius: 6px;\r\n    border: 1px solid #cccccc;\r\n    width: 100%;\r\n    height: 38px;\r\n    max-width: 100%;\r\n    background: #ffffff;\r\n  }\r\n\r\n  & .slider {\r\n    position: relative;\r\n    height: 32px;\r\n  }\r\n\r\n  & .slider span {\r\n    position: absolute;\r\n    top: 18px;\r\n    left: 90%;\r\n    padding: 2px;\r\n    width: 10%;\r\n    box-sizing: border-box;\r\n    background: #ffffff;\r\n    text-align: center;\r\n    z-index: 1;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  & .container input[type='range'] {\r\n    width: 90%;\r\n    height: 2px;\r\n    background: #ffffff;\r\n    -webkit-appearance: none;\r\n    outline: none;\r\n    border-radius: 2px;\r\n    border: none;\r\n    padding: 0;\r\n    left: 0;\r\n    top: 27px;\r\n    position: absolute;\r\n    z-index: 1;\r\n  }\r\n\r\n  @media (max-width: 550px) {\r\n    & .container span {\r\n      width: 20%;\r\n      left: 80%;\r\n    }\r\n    & .container input[type='range'] {\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  & .container input[type='range']::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background: #6442d3;\r\n  }\r\n\r\n  & .container input[type='color'] {\r\n    border: 0;\r\n    padding: 0.2rem;\r\n  }\r\n\r\n  & .actions {\r\n    text-align: right;\r\n  }\r\n\r\n  & button {\r\n    font: inherit;\r\n    cursor: pointer;\r\n    padding: 1rem 2rem;\r\n    border: 1px solid #3f005c;\r\n    background-color: #3f005c;\r\n    color: #ffffff;\r\n    border-radius: 12px;\r\n  }\r\n\r\n  & button:hover,\r\n  & button:active {\r\n    background-color: #510674;\r\n    border-color: #510674;\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","const SelectItem = props => {\r\n  const options = [];\r\n  for (let option of props.options)\r\n    options.push(<option value={option}>{option}</option>);\r\n  return (\r\n    <label>\r\n      Item\r\n      <select\r\n        options={props.options}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      >\r\n        {options}\r\n        {/* <option value=\"Switch\">Switch</option>\r\n      <option value=\"Checkbox\">Checkbox</option> */}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default SelectItem;\r\n","const Input = props => {\r\n  const classes = 'container' + (props.type === 'range' ? ' slider' : '');\r\n  return (\r\n    <div className={classes}>\r\n      <label>\r\n        {props.title}\r\n        {props.type === 'range' && (\r\n          <span>\r\n            {props.value} {props.unit}\r\n          </span>\r\n        )}\r\n        <input\r\n          type={props.type}\r\n          min={props.min}\r\n          max={props.max}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import Div from './Switch.css.js';\r\n\r\nconst Switch = props => {\r\n  return (\r\n    <Div\r\n      size={props.size}\r\n      on_color={props.on_color}\r\n      offColor={props.offColor}\r\n      innerColor={props.innerColor}\r\n      rounded={props.rounded}\r\n      on_img={props.onImg}\r\n      offImg={props.offImg}\r\n    >\r\n      <label>\r\n        <input type=\"checkbox\" />\r\n        <span />\r\n      </label>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Switch;\r\n","export default __webpack_public_path__ + \"static/media/CheckMark.94abc5e3.svg\";","import Div from './Checkbox.css';\r\n\r\nconst Checkbox = props => (\r\n  <Div\r\n    size={props.size}\r\n    on_color={props.on_color}\r\n    offColor={props.offColor}\r\n    borderSize={props.borderSize}\r\n    borderRadius={props.borderRadius}\r\n    borderColor={props.borderColor}\r\n    hoverColor={props.hoverColor}\r\n  >\r\n    <label>\r\n      <input type=\"checkbox\" />\r\n      <span />\r\n    </label>\r\n  </Div>\r\n);\r\nexport default Checkbox;\r\n","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  margin: 2rem auto;\r\n  width: 50rem;\r\n  height: 1px;\r\n  max-width: 95%;\r\n  border-radius: 12px 12px 0 0;\r\n  text-align: center;\r\n  box-shadow: 0 1px 8px #00000040;\r\n\r\n  & div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 54px;\r\n    font-size: 1.5rem;\r\n    width: 50%;\r\n    background: #a892ee;\r\n    transition: 0.3s;\r\n    border-bottom: 2px solid #b5add2;\r\n  }\r\n\r\n  & div:hover {\r\n    background-color: #876ce0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & div:nth-child(1) {\r\n    border-radius: 12px 0 0 0;\r\n    border-right: 1px solid #b5add2;\r\n    float: left;\r\n  }\r\n\r\n  & div:nth-child(2) {\r\n    border-radius: 0 12px 0 0;\r\n    border-left: 1px solid #b5add2;\r\n    float: right;\r\n  }\r\n\r\n  & div.clicked {\r\n    background: #6e52cb;\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","import Div from './Buttons.css';\r\n\r\nconst Buttons = props => {\r\n  const value = props.value;\r\n\r\n  return (\r\n    <Div>\r\n      <div\r\n        onClick={props.onChange}\r\n        className={value === 'React' ? 'clicked' : ''}\r\n      >\r\n        React\r\n      </div>\r\n      <div\r\n        onClick={props.onChange}\r\n        className={value === 'HTML' ? 'clicked' : ''}\r\n      >\r\n        HTML and CSS\r\n      </div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  text-align: left;\r\n\r\n  & h3 {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  & ol li {\r\n    font-size: 14px;\r\n  }\r\n\r\n  & a {\r\n    text-decoration: none;\r\n    color: #4826b9;\r\n  }\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n  text-align: left;\r\n`;\r\n\r\nexport { Div };\r\nexport default Pre;\r\n","export default __webpack_public_path__ + \"static/media/Switch.e5227222.zip\";","export default __webpack_public_path__ + \"static/media/Checkbox.4c6d46ab.zip\";","import Pre, { Div } from './Code.css';\r\nimport Switch from './zipFiles/Switch.zip';\r\nimport Checkbox from './zipFiles/Checkbox.zip';\r\nimport CheckMark from './../Checkbox/CheckMark.svg';\r\n\r\nconst Code = props => {\r\n  const item = props.item;\r\n  const size = Math.max(1, Math.min(props.size, 20));\r\n  const onColor = props.onColor;\r\n  const offColor = props.offColor;\r\n  const innerColor = props.innerColor;\r\n  const borderSize = Math.max(0, Math.min(props.borderSize, 20));\r\n  const borderRadius = Math.max(0, Math.min(props.borderRadius, 50));\r\n  const borderColor = props.borderColor;\r\n  const hoverColor = props.hoverColor;\r\n  const codeType = props.codeType;\r\n\r\n  if (codeType === 'React')\r\n    return (\r\n      <Div>\r\n        <h3>Steps to use React script</h3>\r\n        <ol type=\"1\">\r\n          <li>\r\n            Install styled-components library in your app\r\n            <br /> (npm install styled-components)\r\n          </li>\r\n          <li>\r\n            Install the{' '}\r\n            <i>\r\n              <b>\r\n                <a\r\n                  href={item === 'Switch' ? Switch : Checkbox}\r\n                  download={`${item}.zip`}\r\n                >\r\n                  {item}\r\n                </a>\r\n              </b>\r\n            </i>{' '}\r\n            files and put them in your app\r\n          </li>\r\n          <li>\r\n            Import <b>{item}</b> in your file and copy the code!\r\n          </li>\r\n        </ol>\r\n        <Pre>\r\n          {item === 'Switch' &&\r\n            `<Switch\r\n  size={${size}}\r\n  on_color='${onColor}'\r\n  offColor='${offColor}'\r\n  innerColor='${innerColor}'\r\n/>`}\r\n\r\n          {item === 'Checkbox' &&\r\n            `<Checkbox\r\n  size={${size}}\r\n  on_color='${onColor}'\r\n  offColor='${offColor}'\r\n  borderSize={${borderSize}}\r\n  borderRadius={${borderRadius}}\r\n  borderColor='${borderColor}'\r\n  hoverColor='${hoverColor}'\r\n/>`}\r\n        </Pre>\r\n      </Div>\r\n    );\r\n\r\n  return (\r\n    <Div>\r\n      <Pre>\r\n        {item === 'Switch' &&\r\n          `<style>\r\n  #switch-container label {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: ${Math.round((size - 1) * 10 + 30)}px;\r\n    height: ${Math.round((size - 1) * (17 / 3) + 17)}px;\r\n  }\r\n\r\n  #switch-container label input {\r\n    display: none;\r\n  }\r\n\r\n  #switch-container label span {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    transition: 0.5s;\r\n    background: ${offColor};\r\n    border-radius: 100px;\r\n  }\r\n\r\n  #switch-container label span:before {\r\n    position: absolute;\r\n    content: '';\r\n    transition: 0.5s;\r\n    width: ${Math.round((size - 1) * (13 / 3) + 13)}px;\r\n    height: ${Math.round((size - 1) * (13 / 3) + 13)}px;\r\n    left: ${Math.round((size - 1) * (2 / 3) + 2)}px;\r\n    bottom: ${Math.round((size - 1) * (2 / 3) + 2)}px;\r\n    background: ${innerColor};\r\n    border-radius: 50%;\r\n  }\r\n\r\n  #switch-container label input:checked + span:before {\r\n    background: ${innerColor};\r\n    transform: translateX(${Math.floor((size - 1) * (13 / 3) + 13)}px);\r\n  }\r\n\r\n  #switch-container label input:checked + span {\r\n    background: ${onColor};\r\n  }\r\n</style>\r\n    \r\n<div id=\"switch-container\">\r\n  <label>\r\n    <input type=\"checkbox\" />\r\n    <span />\r\n  </label>\r\n</div>`}\r\n      </Pre>\r\n      {item === 'Checkbox' && (\r\n        <div>\r\n          <h3>Steps to use checkbox in html</h3>\r\n          <ol type=\"1\">\r\n            <li>\r\n              Install the{' '}\r\n              <i>\r\n                <b>\r\n                  <a href={CheckMark} download=\"CheckMark.svg\">\r\n                    CheckMark\r\n                  </a>\r\n                </b>\r\n              </i>{' '}\r\n              svg file\r\n            </li>\r\n            <li>Add it to the same directory as the code</li>\r\n          </ol>\r\n          <Pre>\r\n            {`<style>\r\n  #checkbox-container label {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: ${Math.round((size - 1) * (13 / 3) + 13)}px;\r\n    height: ${Math.round((size - 1) * (13 / 3) + 13)}px;\r\n    border: ${borderSize}px solid ${borderColor};\r\n  }\r\n\r\n  #checkbox-container input {\r\n    display: none;\r\n  }\r\n\r\n  #checkbox-container span:hover {\r\n    background: ${hoverColor};\r\n  }\r\n\r\n  #checkbox-container span {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: ${offColor};\r\n    transition: 0.5s;\r\n  }\r\n\r\n  #checkbox-container input:checked + span {\r\n    background: ${onColor}\r\n    url('CheckMark.svg');\r\n    background-size: cover;\r\n  }\r\n</style>\r\n\r\n<div id=\"checkbox-container\">\r\n  <label>\r\n    <input type=\"checkbox\" />\r\n    <span />\r\n  </label>\r\n</div>\r\n    `}\r\n          </Pre>\r\n        </div>\r\n      )}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import { useEffect, useState } from 'react';\r\nimport Card from '../Card/Card';\r\nimport Div from './ItemForm.css';\r\nimport SelectItem from './components/SelectItem';\r\nimport Input from './components/Input';\r\nimport Switch from '../Switch/Switch';\r\nimport Checkbox from '../Checkbox/Checkbox';\r\nimport Buttons from '../Buttons/Buttons';\r\nimport Code from '../Code/Code';\r\n\r\nconst ITEMS = ['Switch', 'Checkbox'];\r\n\r\nconst DATA = {\r\n  item: 'Switch',\r\n  size: '1',\r\n  onColor: '#2094f3',\r\n  offColor: '#cccccc',\r\n  innerColor: '#ffffff',\r\n  borderSize: '1',\r\n  borderRadius: '0',\r\n  borderColor: '#000000',\r\n  hoverColor: '#cccccc',\r\n  codeType: 'React',\r\n};\r\n\r\nconst ItemForm = () => {\r\n  const [item, setItem] = useState(DATA.item);\r\n  const [size, setSize] = useState(DATA.size);\r\n  const [onColor, setOnColor] = useState(DATA.onColor);\r\n  const [offColor, setOffColor] = useState(DATA.offColor);\r\n  const [innerColor, setInnerColor] = useState(DATA.innerColor);\r\n  const [borderSize, setBorderSize] = useState(DATA.borderSize);\r\n  const [borderRadius, setBorderRadius] = useState(DATA.borderRadius);\r\n  const [borderColor, setBorderColor] = useState(DATA.borderColor);\r\n  const [hoverColor, setHoverColor] = useState(DATA.hoverColor);\r\n  const [codeType, setCodeType] = useState(DATA.codeType);\r\n\r\n  useEffect(() => {\r\n    DATA.item = item;\r\n    DATA.size = size;\r\n    DATA.onColor = onColor;\r\n    DATA.offColor = offColor;\r\n    DATA.innerColor = innerColor;\r\n    DATA.borderSize = borderSize;\r\n    DATA.borderRadius = borderRadius;\r\n    DATA.borderColor = borderColor;\r\n    DATA.hoverColor = hoverColor;\r\n    DATA.codeType = codeType;\r\n  });\r\n\r\n  const changeItemHandler = e => {\r\n    setItem(e.target.value);\r\n  };\r\n  const changeSizeHandler = e => {\r\n    setSize(e.target.value);\r\n  };\r\n  const changeOnColorHandler = e => {\r\n    setOnColor(e.target.value);\r\n  };\r\n  const changeOffColorHandler = e => {\r\n    setOffColor(e.target.value);\r\n  };\r\n  const changeInnerColorHandler = e => {\r\n    setInnerColor(e.target.value);\r\n  };\r\n  const changeBorderSizeHandler = e => {\r\n    setBorderSize(e.target.value);\r\n  };\r\n  const changeBorderRadiusHandler = e => {\r\n    setBorderRadius(e.target.value);\r\n  };\r\n  const changeBorderColorHandler = e => {\r\n    setBorderColor(e.target.value);\r\n  };\r\n  const changeHoverColorHandler = e => {\r\n    setHoverColor(e.target.value);\r\n  };\r\n  const changeCodeTypeHandler = e => {\r\n    setCodeType(e.target.innerHTML.split(' ')[0]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Div>\r\n          <div className=\"container\">\r\n            <SelectItem\r\n              value={item}\r\n              options={ITEMS}\r\n              onChange={changeItemHandler}\r\n            />\r\n          </div>\r\n\r\n          {(item === 'Switch' || item === 'Checkbox') && (\r\n            <Input\r\n              title=\"Size\"\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"20\"\r\n              value={Math.max(1, Math.min(size, 20))}\r\n              onChange={changeSizeHandler}\r\n            />\r\n          )}\r\n\r\n          {item === 'Checkbox' && (\r\n            <Input\r\n              title=\"Border Size\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"20\"\r\n              value={Math.max(0, Math.min(borderSize, 20))}\r\n              onChange={changeBorderSizeHandler}\r\n            />\r\n          )}\r\n\r\n          {item === 'Checkbox' && (\r\n            <Input\r\n              title=\"Border Radius\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"50\"\r\n              unit=\"%\"\r\n              value={Math.max(0, Math.min(borderRadius, 50))}\r\n              onChange={changeBorderRadiusHandler}\r\n            />\r\n          )}\r\n\r\n          {(item === 'Switch' || item === 'Checkbox') && (\r\n            <Input\r\n              title=\"On Color\"\r\n              type=\"color\"\r\n              value={onColor}\r\n              onChange={changeOnColorHandler}\r\n            />\r\n          )}\r\n\r\n          {(item === 'Switch' || item === 'Checkbox') && (\r\n            <Input\r\n              title=\"Off Color\"\r\n              type=\"color\"\r\n              value={offColor}\r\n              onChange={changeOffColorHandler}\r\n            />\r\n          )}\r\n\r\n          {item === 'Checkbox' && (\r\n            <Input\r\n              title=\"Border Color\"\r\n              type=\"color\"\r\n              value={borderColor}\r\n              onChange={changeBorderColorHandler}\r\n            />\r\n          )}\r\n\r\n          {item === 'Switch' && (\r\n            <Input\r\n              title=\"Inner Color\"\r\n              type=\"color\"\r\n              value={innerColor}\r\n              onChange={changeInnerColorHandler}\r\n            />\r\n          )}\r\n\r\n          {item === 'Checkbox' && (\r\n            <Input\r\n              title=\"Hover Color\"\r\n              type=\"color\"\r\n              value={hoverColor}\r\n              onChange={changeHoverColorHandler}\r\n            />\r\n          )}\r\n        </Div>\r\n      </Card>\r\n\r\n      <Card>\r\n        {item === 'Switch' && (\r\n          <Switch\r\n            size={Math.max(1, Math.min(size, 20))}\r\n            on_color={onColor}\r\n            offColor={offColor}\r\n            innerColor={innerColor}\r\n          />\r\n        )}\r\n\r\n        {item === 'Checkbox' && (\r\n          <Checkbox\r\n            size={Math.max(1, Math.min(size, 20))}\r\n            on_color={onColor}\r\n            offColor={offColor}\r\n            borderSize={Math.max(0, Math.min(borderSize, 20))}\r\n            borderRadius={Math.max(0, Math.min(borderRadius, 50))}\r\n            borderColor={borderColor}\r\n            hoverColor={hoverColor}\r\n          />\r\n        )}\r\n      </Card>\r\n\r\n      <Buttons value={codeType} onChange={changeCodeTypeHandler} />\r\n\r\n      <Card>\r\n        <Code\r\n          item={item}\r\n          size={size}\r\n          onColor={onColor}\r\n          offColor={offColor}\r\n          innerColor={innerColor}\r\n          borderSize={borderSize}\r\n          borderRadius={borderRadius}\r\n          borderColor={borderColor}\r\n          hoverColor={hoverColor}\r\n          codeType={codeType}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { DATA };\r\nexport default ItemForm;\r\n","import ItemForm from './components/ItemForm/ItemForm';\r\n\r\nconst App = () => <ItemForm />;\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './Style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}