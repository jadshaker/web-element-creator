{"version":3,"sources":["components/Switch/Switch.css.js","components/Checkbox/Checkbox.css.js","components/Card/Card.css.js","components/Card/Card.js","components/ItemForm/ItemForm.css.js","components/ItemForm/components/SelectItem.js","components/ItemForm/components/Input.js","components/Switch/Switch.js","components/Checkbox/CheckMark.svg","components/Checkbox/Checkbox.js","components/Buttons/Buttons.css.js","components/Buttons/Buttons.js","components/Code/Code.css.js","components/Code/zipFiles/Switch.zip","components/Code/zipFiles/Checkbox.zip","components/Code/Code.js","components/ItemForm/ItemForm.js","App.js","index.js"],"names":["size","offColor","onColor","innerColor","rounded","onImg","offImg","borderColor","borderSize","hoverColor","Div","styled","div","Card","props","classes","className","id","children","SelectItem","e","value","onChange","Input","title","type","min","max","on_color","on_img","Switch","console","log","CheckMark","Checkbox","Buttons","onClick","Pre","pre","Code","item","Math","codeType","href","download","round","floor","DATA","ItemForm","useState","setItem","setSize","setOnColor","setOffColor","setInnerColor","setBorderColor","setBorderSize","setHoverColor","setCodeType","useEffect","target","innerHTML","split","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0acde70.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nlet size, offColor, onColor, innerColor, rounded, onImg, offImg;\r\n\r\nconst Div = styled.div`\r\n  ${props => {\r\n    size = props.size || 1;\r\n    offColor = props.offColor || '#cccccc';\r\n    onColor = props.on_color || '#2094f3';\r\n    innerColor = props.innerColor || '#ffffff';\r\n    rounded = props.rounded !== false;\r\n    onImg = props.on_img;\r\n    offImg = props.offImg;\r\n  }}\r\n\r\n  & label {\r\n    position: relative;\r\n    display: inline-block;\r\n\r\n    width: ${() => (size - 1) * 10 + 30}px;\r\n    height: ${() => (size - 1) * (17 / 3) + 17}px;\r\n  }\r\n\r\n  & label input {\r\n    display: none;\r\n  }\r\n\r\n  & label span {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    transition: 0.5s;\r\n\r\n    background: ${() => offColor};\r\n    ${() => rounded && 'border-radius: 34px;'}\r\n  }\r\n\r\n  & label span:before {\r\n    position: absolute;\r\n    content: '';\r\n    transition: 0.5s;\r\n\r\n    width: ${() => (size - 1) * (13 / 3) + 13}px;\r\n    height: ${() => (size - 1) * (13 / 3) + 13}px;\r\n    left: ${() => (size - 1) * (2 / 3) + 2}px;\r\n    bottom: ${() => (size - 1) * (2 / 3) + 2}px;\r\n    background: ${() => innerColor} no-repeat center center;\r\n    background-image: url(${() => offImg});\r\n    ${() => rounded && 'border-radius: 50%;'}\r\n  }\r\n\r\n  & label input:checked + span:before {\r\n    background: ${() => innerColor} no-repeat center center;\r\n    background-image: url(${() => onImg});\r\n    transform: translateX(${() => (size - 1) * (13 / 3) + 13}px);\r\n  }\r\n\r\n  & label input:checked + span {\r\n    background: ${() => onColor};\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","import styled from 'styled-components';\r\nimport CheckMark from './CheckMark.svg';\r\n\r\nlet size, onColor, offColor, borderColor, borderSize, hoverColor;\r\n\r\nconst Div = styled.div`\r\n  ${props => {\r\n    size = props.size || 1;\r\n    onColor = props.on_color || '#5ce640';\r\n    offColor = props.offColor || '#ffffff';\r\n    hoverColor = props.hoverColor || '#cccccc';\r\n    borderColor = props.borderColor || '#000000';\r\n    borderSize = props.borderSize || '0';\r\n    console.log(onColor);\r\n  }}\r\n  & label {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: ${() => (size - 1) * (13 / 3) + 13}px;\r\n    height: ${() => (size - 1) * (13 / 3) + 13}px;\r\n    border: ${() => borderSize}px solid ${() => borderColor};\r\n  }\r\n\r\n  & input {\r\n    display: none;\r\n  }\r\n\r\n  & span:hover {\r\n    background: ${() => hoverColor};\r\n  }\r\n\r\n  & span {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: ${() => offColor};\r\n    transition: 0.5s;\r\n  }\r\n\r\n  & label input:checked + span {\r\n    background: ${() => onColor} url(${CheckMark});\r\n    background-size: cover;\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: #a892ee;\r\n  padding: 1rem;\r\n  margin: 2rem auto;\r\n  width: 50rem;\r\n  max-width: 95%;\r\n  border-radius: 12px;\r\n  text-align: center;\r\n  box-shadow: 0 1px 8px #00000040;\r\n\r\n  & button {\r\n    font: inherit;\r\n    cursor: pointer;\r\n    padding: 1rem 2rem;\r\n    border: 1px solid #40005d;\r\n    background-color: #40005d;\r\n    color: white;\r\n    border-radius: 12px;\r\n    margin-right: 1rem;\r\n  }\r\n\r\n  & button:hover,\r\n  & button:active {\r\n    background-color: #510674;\r\n    border-color: #510674;\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","import Div from './Card.css';\r\n\r\nconst Card = props => {\r\n  const classes = props.className;\r\n  const id = props.id;\r\n  return (\r\n    <Div className={classes} id={id}>\r\n      {props.children}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  & div {\r\n    gap: 1rem;\r\n    margin-bottom: 1rem;\r\n    text-align: left;\r\n  }\r\n\r\n  & .container {\r\n    width: 100%;\r\n  }\r\n\r\n  & .container label {\r\n    margin-top: 0.2rem;\r\n    font-weight: 200;\r\n    display: block;\r\n  }\r\n\r\n  & .container input,\r\n  & .container select {\r\n    font: inherit;\r\n    padding: 0.5rem;\r\n    border-radius: 6px;\r\n    border: 1px solid #cccccc;\r\n    width: 100%;\r\n    height: 38px;\r\n    max-width: 100%;\r\n    background: #ffffff;\r\n  }\r\n\r\n  & .container input[type='color'] {\r\n    border: 0;\r\n    padding: 0.2rem;\r\n  }\r\n\r\n  & .actions {\r\n    text-align: right;\r\n  }\r\n\r\n  & button {\r\n    font: inherit;\r\n    cursor: pointer;\r\n    padding: 1rem 2rem;\r\n    border: 1px solid #3f005c;\r\n    background-color: #3f005c;\r\n    color: #ffffff;\r\n    border-radius: 12px;\r\n  }\r\n\r\n  & button:hover,\r\n  & button:active {\r\n    background-color: #510674;\r\n    border-color: #510674;\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","const SelectItem = e => (\r\n  <label>\r\n    Item\r\n    <select value={e.value} onChange={e.onChange}>\r\n      <option value=\"Switch\">Switch</option>\r\n      <option value=\"Checkbox\">Checkbox</option>\r\n    </select>\r\n  </label>\r\n);\r\n\r\nexport default SelectItem;\r\n","const Input = e => (\r\n  <label>\r\n    {e.title}\r\n    <input\r\n      type={e.type}\r\n      min={e.min}\r\n      max={e.max}\r\n      value={e.value}\r\n      onChange={e.onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nexport default Input;\r\n","import Div from './Switch.css.js';\r\n\r\nconst Switch = props => {\r\n  return (\r\n    <Div\r\n      size={props.size}\r\n      on_color={props.on_color}\r\n      offColor={props.offColor}\r\n      innerColor={props.innerColor}\r\n      rounded={props.rounded}\r\n      on_img={props.onImg}\r\n      offImg={props.offImg}\r\n    >\r\n      <label>\r\n        <input type=\"checkbox\" />\r\n        <span />\r\n      </label>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Switch;\r\n","export default __webpack_public_path__ + \"static/media/CheckMark.94abc5e3.svg\";","import Div from './Checkbox.css';\r\n\r\nconst Checkbox = props => (\r\n  <Div\r\n    size={props.size}\r\n    on_color={props.on_color}\r\n    offColor={props.offColor}\r\n    borderColor={props.borderColor}\r\n    borderSize={props.borderSize}\r\n    hoverColor={props.hoverColor}\r\n  >\r\n    <label>\r\n      <input type=\"checkbox\" />\r\n      <span />\r\n    </label>\r\n  </Div>\r\n);\r\nexport default Checkbox;\r\n","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  margin: 2rem auto;\r\n  width: 50rem;\r\n  height: 1px;\r\n  max-width: 95%;\r\n  border-radius: 12px 12px 0 0;\r\n  text-align: center;\r\n  box-shadow: 0 1px 8px #00000040;\r\n\r\n  & div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 54px;\r\n    font-size: 1.5rem;\r\n    width: 50%;\r\n    background: #a892ee;\r\n    transition: 0.3s;\r\n    border-bottom: 2px solid #b5add2;\r\n  }\r\n\r\n  & div:hover {\r\n    background-color: #876ce0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & div:nth-child(1) {\r\n    border-radius: 12px 0 0 0;\r\n    border-right: 1px solid #b5add2;\r\n    float: left;\r\n  }\r\n\r\n  & div:nth-child(2) {\r\n    border-radius: 0 12px 0 0;\r\n    border-left: 1px solid #b5add2;\r\n    float: right;\r\n  }\r\n\r\n  & div.clicked {\r\n    background: #6e52cb;\r\n  }\r\n`;\r\n\r\nexport default Div;\r\n","import Div from './Buttons.css';\r\n\r\nconst Buttons = props => {\r\n  const value = props.value;\r\n\r\n  return (\r\n    <Div>\r\n      <div\r\n        onClick={props.onChange}\r\n        className={value === 'React' ? 'clicked' : ''}\r\n      >\r\n        React\r\n      </div>\r\n      <div\r\n        onClick={props.onChange}\r\n        className={value === 'HTML' ? 'clicked' : ''}\r\n      >\r\n        HTML and CSS\r\n      </div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  text-align: left;\r\n\r\n  & h3 {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  & ol li {\r\n    font-size: 14px;\r\n  }\r\n\r\n  & a {\r\n    text-decoration: none;\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n  text-align: left;\r\n`;\r\n\r\nexport { Div };\r\nexport default Pre;\r\n","export default __webpack_public_path__ + \"static/media/Switch.bea36a20.zip\";","export default __webpack_public_path__ + \"static/media/Checkbox.ec4de38d.zip\";","import Pre, { Div } from './Code.css';\r\nimport Switch from './zipFiles/Switch.zip';\r\nimport Checkbox from './zipFiles/Checkbox.zip';\r\nimport CheckMark from './../Checkbox/CheckMark.svg';\r\n\r\nconst Code = props => {\r\n  const item = props.item;\r\n  const size = Math.max(1, Math.min(props.size, 20));\r\n  const onColor = props.onColor;\r\n  const offColor = props.offColor;\r\n  const innerColor = props.innerColor;\r\n  const borderColor = props.borderColor;\r\n  const borderSize = Math.max(0, Math.min(props.borderSize, 20));\r\n  const hoverColor = props.hoverColor;\r\n  const codeType = props.codeType;\r\n\r\n  if (codeType === 'React')\r\n    return (\r\n      <Div>\r\n        <h3>Steps to use React script</h3>\r\n        <ol type=\"1\">\r\n          <li>\r\n            Install styled-components library in your app\r\n            <br /> (npm install styled-components)\r\n          </li>\r\n          <li>\r\n            Install the{' '}\r\n            <i>\r\n              <b>\r\n                <a\r\n                  href={item === 'Switch' ? Switch : Checkbox}\r\n                  download={`${item}.zip`}\r\n                >\r\n                  {item}\r\n                </a>\r\n              </b>\r\n            </i>{' '}\r\n            files and put them in your app\r\n          </li>\r\n          <li>\r\n            Import <b>{item}</b> in your file and copy the code!\r\n          </li>\r\n        </ol>\r\n        <Pre>\r\n          {item === 'Switch' &&\r\n            `<Switch\r\n    size={${size}}\r\n    on_color='${onColor}'\r\n    offColor='${offColor}'\r\n    innerColor='${innerColor}'\r\n/>`}\r\n\r\n          {item === 'Checkbox' &&\r\n            `<Checkbox\r\n    size={${size}}\r\n    on_color='${onColor}'\r\n    offColor='${offColor}'\r\n    borderColor='${borderColor}'\r\n    borderSize={${borderSize}}\r\n    hoverColor='${hoverColor}'\r\n/>`}\r\n        </Pre>\r\n      </Div>\r\n    );\r\n\r\n  return (\r\n    <Div>\r\n      <Pre>\r\n        {item === 'Switch' &&\r\n          `<style>\r\n    #switch-container label {\r\n        position: relative;\r\n        display: inline-block;\r\n        width: ${Math.round((size - 1) * 10 + 30)}px;\r\n        height: ${Math.round((size - 1) * (17 / 3) + 17)}px;\r\n    }\r\n\r\n    #switch-container label input {\r\n        display: none;\r\n    }\r\n\r\n    #switch-container label span {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        transition: 0.5s;\r\n        background: ${offColor};\r\n        border-radius: 34px;\r\n    }\r\n\r\n    #switch-container label span:before {\r\n        position: absolute;\r\n        content: '';\r\n        transition: 0.5s;\r\n        width: ${Math.round((size - 1) * (13 / 3) + 13)}px;\r\n        height: ${Math.round((size - 1) * (13 / 3) + 13)}px;\r\n        left: ${Math.round((size - 1) * (2 / 3) + 2)}px;\r\n        bottom: ${Math.round((size - 1) * (2 / 3) + 2)}px;\r\n        background: ${innerColor};\r\n        border-radius: 50%;\r\n    }\r\n\r\n    #switch-container label input:checked + span:before {\r\n        background: ${innerColor};\r\n        transform: translateX(${Math.floor((size - 1) * (13 / 3) + 13)}px);\r\n    }\r\n\r\n    #switch-container label input:checked + span {\r\n        background: ${onColor};\r\n    }\r\n</style>\r\n    \r\n<div id=\"switch-container\">\r\n    <label>\r\n        <input type=\"checkbox\" />\r\n        <span />\r\n    </label>\r\n</div>`}\r\n\r\n        {item === 'Checkbox' &&\r\n          `<style>\r\n    #checkbox-container label {\r\n        position: relative;\r\n        display: inline-block;\r\n        width: ${Math.round((size - 1) * (13 / 3) + 13)}px;\r\n        height: ${Math.round((size - 1) * (13 / 3) + 13)}px;\r\n        border: ${borderSize} solid ${borderColor};\r\n    }\r\n\r\n    #checkbox-container input {\r\n        display: none;\r\n    }\r\n\r\n    #checkbox-container span:hover {\r\n        background: ${hoverColor};\r\n    }\r\n\r\n    #checkbox-container span {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background: ${offColor};\r\n        transition: 0.5s;\r\n    }\r\n\r\n    #checkbox-container input:checked + span {\r\n        background: ${onColor}\r\n            url('CheckMark.svg');\r\n        background-size: cover;\r\n    }\r\n</style>\r\n\r\n<div id=\"checkbox-container\">\r\n    <label>\r\n        <input type=\"checkbox\" />\r\n        <span />\r\n    </label>\r\n</div>\r\n`}\r\n      </Pre>\r\n      Put this svg file in the same path as the code <br />\r\n      <i>\r\n        <b>\r\n          <a href={CheckMark} download=\"CheckMark.svg\">\r\n            CheckMark\r\n          </a>\r\n        </b>\r\n      </i>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import { useEffect, useState } from 'react';\r\nimport Card from '../Card/Card';\r\nimport Div from './ItemForm.css';\r\nimport SelectItem from './components/SelectItem';\r\nimport Input from './components/Input';\r\nimport Switch from '../Switch/Switch';\r\nimport Checkbox from '../Checkbox/Checkbox';\r\nimport Buttons from '../Buttons/Buttons';\r\nimport Code from '../Code/Code';\r\n\r\nconst DATA = {\r\n  item: 'Switch',\r\n  size: '1',\r\n  onColor: '#2094f3',\r\n  offColor: '#cccccc',\r\n  innerColor: '#ffffff',\r\n  borderColor: '#000000',\r\n  borderSize: '1',\r\n  hoverColor: '#cccccc',\r\n  codeType: 'React',\r\n};\r\n\r\nconst ItemForm = () => {\r\n  const [item, setItem] = useState(DATA.item);\r\n  const [size, setSize] = useState(DATA.size);\r\n  const [onColor, setOnColor] = useState(DATA.onColor);\r\n  const [offColor, setOffColor] = useState(DATA.offColor);\r\n  const [innerColor, setInnerColor] = useState(DATA.innerColor);\r\n  const [borderColor, setBorderColor] = useState(DATA.borderColor);\r\n  const [borderSize, setBorderSize] = useState(DATA.borderSize);\r\n  const [hoverColor, setHoverColor] = useState(DATA.hoverColor);\r\n  const [codeType, setCodeType] = useState(DATA.codeType);\r\n\r\n  useEffect(() => {\r\n    DATA.item = item;\r\n    DATA.size = size;\r\n    DATA.onColor = onColor;\r\n    DATA.offColor = offColor;\r\n    DATA.innerColor = innerColor;\r\n    DATA.borderColor = borderColor;\r\n    DATA.borderSize = borderSize;\r\n    DATA.hoverColor = hoverColor;\r\n    DATA.codeType = codeType;\r\n  });\r\n\r\n  const changeItemHandler = e => {\r\n    setItem(e.target.value);\r\n  };\r\n  const changeSizeHandler = e => {\r\n    setSize(e.target.value);\r\n  };\r\n  const changeOnColorHandler = e => {\r\n    setOnColor(e.target.value);\r\n  };\r\n  const changeOffColorHandler = e => {\r\n    setOffColor(e.target.value);\r\n  };\r\n  const changeInnerColorHandler = e => {\r\n    setInnerColor(e.target.value);\r\n  };\r\n  const changeBorderColorHandler = e => {\r\n    setBorderColor(e.target.value);\r\n  };\r\n  const changeBorderSizeHandler = e => {\r\n    setBorderSize(e.target.value);\r\n  };\r\n  const changeHoverColorHandler = e => {\r\n    setHoverColor(e.target.value);\r\n  };\r\n  const changeCodeTypeHandler = e => {\r\n    setCodeType(e.target.innerHTML.split(' ')[0]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Div>\r\n          <div className=\"container\">\r\n            <SelectItem value={item} onChange={changeItemHandler} />\r\n          </div>\r\n\r\n          {(item === 'Switch' || item === 'Checkbox') && (\r\n            <div className=\"container\">\r\n              <Input\r\n                title=\"Size\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"20\"\r\n                value={Math.max(1, Math.min(size, 20))}\r\n                onChange={changeSizeHandler}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {(item === 'Switch' || item === 'Checkbox') && (\r\n            <div className=\"container\">\r\n              <Input\r\n                title=\"On Color\"\r\n                type=\"color\"\r\n                value={onColor}\r\n                onChange={changeOnColorHandler}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {(item === 'Switch' || item === 'Checkbox') && (\r\n            <div className=\"container\">\r\n              <Input\r\n                title=\"Off Color\"\r\n                type=\"color\"\r\n                value={offColor}\r\n                onChange={changeOffColorHandler}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {item === 'Switch' && (\r\n            <div className=\"container\">\r\n              <Input\r\n                title=\"Inner Color\"\r\n                type=\"color\"\r\n                value={innerColor}\r\n                onChange={changeInnerColorHandler}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {item === 'Checkbox' && (\r\n            <div className=\"container\">\r\n              <Input\r\n                title=\"Border Color\"\r\n                type=\"color\"\r\n                value={borderColor}\r\n                onChange={changeBorderColorHandler}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {item === 'Checkbox' && (\r\n            <div className=\"container\">\r\n              <Input\r\n                title=\"Border Size\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"20\"\r\n                value={Math.max(0, Math.min(borderSize, 20))}\r\n                onChange={changeBorderSizeHandler}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {item === 'Checkbox' && (\r\n            <div className=\"container\">\r\n              <Input\r\n                title=\"Hover Color\"\r\n                type=\"color\"\r\n                value={hoverColor}\r\n                onChange={changeHoverColorHandler}\r\n              />\r\n            </div>\r\n          )}\r\n        </Div>\r\n      </Card>\r\n\r\n      <Card>\r\n        {item === 'Switch' && (\r\n          <Switch\r\n            size={Math.max(1, Math.min(size, 20))}\r\n            on_color={onColor}\r\n            offColor={offColor}\r\n            innerColor={innerColor}\r\n          />\r\n        )}\r\n        {item === 'Checkbox' && (\r\n          <Checkbox\r\n            size={Math.max(1, Math.min(size, 20))}\r\n            on_color={onColor}\r\n            offColor={offColor}\r\n            borderColor={borderColor}\r\n            borderSize={Math.max(0, Math.min(borderSize, 20))}\r\n            hoverColor={hoverColor}\r\n          />\r\n        )}\r\n      </Card>\r\n\r\n      <Buttons value={codeType} onChange={changeCodeTypeHandler} />\r\n\r\n      <Card>\r\n        <Code\r\n          item={item}\r\n          size={size}\r\n          onColor={onColor}\r\n          offColor={offColor}\r\n          innerColor={innerColor}\r\n          borderColor={borderColor}\r\n          borderSize={borderSize}\r\n          hoverColor={hoverColor}\r\n          codeType={codeType}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { DATA };\r\nexport default ItemForm;\r\n","import ItemForm from './components/ItemForm/ItemForm';\r\n\r\nconst App = () => <ItemForm />;\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './Style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}